class Client(process):
    def setup(olympus):
        self.headNode = None

    def run():
        output("Client:>> Started")
        if self.headNode is None:
            output("Client:>> Current Configuration is None")
            output("Client:>> Sending req_get_current_configuration to Olympus")
            send(('req_get_current_configuration', self), to=olympus)
            output("Client:>> Waiting for res_get_current_configuration from Olympus")
            await(some(received(('res_get_current_configuration', config_id, current_configuration))))
            output("Client:>> Ready to perform operation")

        output("Client:>> Already have headnode")
        send(('req_operation', self), to=self.headNode[0])
        await(some(received(("res_operation", result))))

    def receive (msg= ('res_get_current_configuration', config_id, current_configuration)):
        output("Client:>> Received res_get_current_configuration from Olympus")
        self.headNode = current_configuration
        output("Client:>> currentConfiguration Updated")

    def receive (msg= ('res_operation', result)):
        output("Client:>> Received res_operation from Replica")
        output("Client:>> Result of operation is ", result)
