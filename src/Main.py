# -*- generated by 1.0.9 -*-
import da
_config_object = {}

class Node_(da.NodeProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([])
    _config_object = {'channel': 'Fifo', 'clock': 'Lamport'}

    def run(self):
        config = {}
        with open('config.txt', 'r') as f:
            for line in f:
                if (not (line[0] == '#')):
                    (key, sep, val) = line.partition('=')
                    if (not (len(sep) == 0)):
                        val = val.strip()
                        config[key.strip()] = (int(val) if str.isdecimal(val) else val)
        class_olympus = da.import_da('Olympus')
        class_client = da.import_da('Client')
        num_replica = ((2 * config['t']) + 1)
        olympus = self.new(class_olympus.Olympus, args=(num_replica, config['head_timeout'], config['nonhead_timeout']), at='OlympusNode')
        clientList = self.new(class_client.Client, num=config['num_client'])
        i = 0
        for client in clientList:
            load = (('workload[' + str(i)) + ']')
            self._setup(client, args=(olympus, i, config[str(load)], config['client_timeout']))
            i += 1
        self._start(olympus)
        self._start(clientList)
